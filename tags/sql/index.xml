<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on 文科人的資訊筆記</title>
    <link>https://bijenchen.github.io/tags/sql/</link>
    <description>Recent content in SQL on 文科人的資訊筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Dec 2020 09:12:41 +0800</lastBuildDate><atom:link href="https://bijenchen.github.io/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Index of Database</title>
      <link>https://bijenchen.github.io/posts/2020/12/database-index/</link>
      <pubDate>Tue, 22 Dec 2020 09:12:41 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/posts/2020/12/database-index/</guid>
      <description>索引的目的 為了讓找資料更快。但是這個「更快」是跟誰比較？是跟「沒有索引時從頭逐項查找」相比。
在查詢資料時索引值的用處 舉例有個資料表長這樣: table_A
   column is index ?     id v   name      如果現在搜尋的是索引欄位 SELECT * FROM table_A WHERE id = 3 會用 B+ 樹的概念搜尋 如果現在搜尋的不是索引欄位 SELECT * FROM table_A WHERE name = &amp;quot;Dingo&amp;quot; 跟沒設定索引一樣，只能逐筆找  索引類型 在 InnoDB 中，它有提供的索引基本上分為兩大類 :
 clustered Index secondary Index  覆蓋索引 ( covering index ) (預設)  內涵:????   連合索引 ( compound index )  內涵:用複數欄位組合成一組索引，建立的順序會影響 index 是否能成功使用以及 WHERE 條件如何下。   前綴索引 ( prefix index )  內涵:?</description>
    </item>
    
    <item>
      <title>SQL Syntax : CASE</title>
      <link>https://bijenchen.github.io/posts/2020/12/sql-case/</link>
      <pubDate>Mon, 21 Dec 2020 15:18:34 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/posts/2020/12/sql-case/</guid>
      <description>SELECT CASE (&amp;quot;欄位名&amp;quot;) AS &amp;quot;別名&amp;quot; WHEN &amp;quot;條件1&amp;quot; THEN &amp;quot;結果1&amp;quot; WHEN &amp;quot;條件2&amp;quot; THEN &amp;quot;結果2&amp;quot; ... [ELSE &amp;quot;結果N&amp;quot;] END FROM &amp;quot;表格名&amp;quot;; 參考資料  SQL CASE  </description>
    </item>
    
    <item>
      <title>Select Data</title>
      <link>https://bijenchen.github.io/posts/2020/11/select-data/</link>
      <pubDate>Mon, 30 Nov 2020 18:04:49 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/posts/2020/11/select-data/</guid>
      <description>原則 在決定查詢條件時，先確定報表撈取的目標(為了什麼目的-Why、想看到哪些欄位、如果有一對多的資料時誰該當主表)
 Why 為了什麼目的？ Where 資料在哪些表( table )裡？ What 想看到哪些欄位？ Who  是不是只要特定範圍的資料？(以「身份」作為限縮條件) 誰要看？需求是什麼？   When 是不是只要特定範圍的資料？(以「時間」作為限縮條件) How 決定 SQL , Subquery? Join?&amp;hellip;&amp;hellip;?  注意事項  如果有一對多的資料時誰該當主表？  依照需求判斷，想要長出怎樣的表？  e.g. table A 對 table B 為一對多 ( table A 1&amp;ndash;* table B ) 如果今天想看的是每筆 B 的 record 對應到 A 的資料，也就是「當 B 有 2 筆(b1,b2)、對應到一筆A資料(a1)時，總資料要有 2 筆」時，應該是這樣： SELECT * FROM table_B JOIN table_A  相反的，如果只在乎能對應到任一 B record 的 table A 資料，會變成： SELECT * FROM table_A JOIN table_B       參考資料     這很基本，小心不要迷失自己！</description>
    </item>
    
  </channel>
</rss>
