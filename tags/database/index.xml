<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>database on 文科人的資訊筆記</title>
    <link>https://bijenchen.github.io/tags/database/</link>
    <description>Recent content in database on 文科人的資訊筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 22 Dec 2020 09:12:41 +0800</lastBuildDate><atom:link href="https://bijenchen.github.io/tags/database/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Index of Database</title>
      <link>https://bijenchen.github.io/posts/2020/12/database-index/</link>
      <pubDate>Tue, 22 Dec 2020 09:12:41 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/posts/2020/12/database-index/</guid>
      <description>索引的目的 為了讓找資料更快。但是這個「更快」是跟誰比較？是跟「沒有索引時從頭逐項查找」相比。
 【情境模擬】 假設我們上網徵求「動畫推薦」，得到一些回應像這樣：
 18:30 A網友「鋼鍊啦鋼鍊！」
18:45 B網友「有鋼鍊那也要推個銀之匙才行」
19:10 C網友「魔法阿嬤」
19:12 D網友「樂園追放，讚」
20:07 E網友「月刊少女野崎同學，會看到笑死」
21:17 F網友「夏目友人帳～」
 所以我們得到了一份原始資料長這樣：
 鋼之鍊金術師
銀之匙
魔法阿嬤
樂園追放
月刊少女野崎同學
夏目友人帳
 當我們想要找這份動畫推薦清單裡有沒有某部動畫時，
最原始的做法就是從第一個檢查最後一個，這也是資料庫最原始的搜尋資料方式。
如果今天有人問我「樂園追放」這部動畫有沒有在清單裡？
我的印象是「我記得中間有人畫風一變，推了個『魔法阿嬤』，然後後面回答馬上又用『樂園追放』把畫風修回日本動畫了 XD」
這時候就有點帶進了「索引」觀念，因為這次我們不是一筆一筆檢查，而是直接由「魔法阿嬤」切入，找到緊接在後的「樂園追放」。
當清單內容變多時，「直接從某點切入搜索」的速度有很高的機率會比「逐項尋找」快速。
演算法裡的「二元搜尋樹」也是這樣的概念。找資料時從當下的切入點開始兵分兩路，直到找到目標。
 「你要找的動畫是『魔法阿嬤』嗎？」 &amp;ndash;&amp;gt; 不是
「資料在『魔法阿嬤』之前還是之後？」 &amp;ndash;&amp;gt; 之後
「資料在『月刊少女野崎同學』之前還是之後？」 &amp;ndash;&amp;gt; 之前
「你要找的動畫是『樂園追放』嗎？」 &amp;ndash;&amp;gt; 是
 更進一步，我們也可以將資料進行排序，例如將動畫按照出版年份或者作品名字的字數排序，試著加快搜尋的過程，
這就是不同索引方式的演進。
 索引的實現 「索引」概念是強烈吃重演算法觀念的領域，「要如何安排資料才能找得更快、耗能更低」正是演算法大展長才之處。 根據索引背後使用的演算法不同，在不同資料情境下可能會產生搜尋速度的落差。
不同資料庫實現「索引」的方式也不盡相同，如果好奇的話需要研究該資料庫的底層設計。
在查詢資料時索引值的用處 舉例有個資料表長這樣，而我們用的資料庫是 MySQL(InnoDB): table_A
   column is index ?     id v   name      如果現在搜尋的是索引欄位 SELECT * FROM table_A WHERE id = 3 會用 B+ 樹的概念搜尋 如果現在搜尋的不是索引欄位 SELECT * FROM table_A WHERE name = &amp;quot;Dingo&amp;quot; 跟沒設定索引一樣，只能逐筆找   InnoDB: MySQL 資料庫可以採用的其中一種資料庫引擎，跟 InnoDB 相同作用的還有 MyISAM, MyRocks &amp;hellip;&amp;hellip; 等。更多資訊可參考 wiki - MySQL資料庫引擎的比較</description>
    </item>
    
  </channel>
</rss>
