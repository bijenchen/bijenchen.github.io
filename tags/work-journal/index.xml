<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Work Journal on 文科人的資訊筆記</title>
    <link>https://bijenchen.github.io/tags/work-journal/</link>
    <description>Recent content in Work Journal on 文科人的資訊筆記</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 23 Sep 2021 18:36:57 +0800</lastBuildDate><atom:link href="https://bijenchen.github.io/tags/work-journal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>20210923</title>
      <link>https://bijenchen.github.io/work-journal/20210923/</link>
      <pubDate>Thu, 23 Sep 2021 18:36:57 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210923/</guid>
      <description>事件紀錄 消失的 .bundle 檔 由於目前專案中，nginx 服務是一個 docker container ，所以加了新的 conf.d 檔案後，需要重啟 nginx container 才能吃到新設定。
但是今天在加上新設定前，失手對正常運作中的 nginx container 執行了 docker-compose down &amp;amp; docker-compose up -d 後，容器居然沒有重啟成功，
以 docker ps 檢查狀態，發現容器果然持續卡在 restarting ，用 docker logs [container name] 檢查狀況，看到 log 中記錄了
nginx: [emerg] cannot load certificate &amp;quot;/ssl/xxxx.bundle&amp;quot;: BIO_new_file() failed (SSL: error:02001002:system library:fopen:No such file or directory:fopen(&#39;/ssl/xxxx.bundle&#39;,&#39;r&#39;) error:2006D080:BIO routines:BIO_new_file:no such file) 因為沒有深入碰過 ssl 憑證，所以我只能先確認到底是誰在使用 xxxx.bundle 這個檔案，
查了一下發現是前後端容器的 nginx 跳轉設定 (nginx &amp;gt; conf.d &amp;gt; .conf) 裡面，指定 ssl 憑證檔時使用。</description>
    </item>
    
    <item>
      <title>20210901</title>
      <link>https://bijenchen.github.io/work-journal/20210901/</link>
      <pubDate>Wed, 01 Sep 2021 10:52:40 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210901/</guid>
      <description>事件紀錄 關於程式優化 在程式執行中，盡可能少產生一些龐大但使用次數少的物件，避免無謂佔用記憶體。
像是 cache 沒有控管地胡亂儲存累積，就可能會讓記憶體被塞滿，卡住其他行為。
或者是產生只用一次的大陣列，如果可以隨著產生的過程把後續需要的行為直接處理掉，就不必長出使用頻率很低的陣列出來佔空間。
關於 laravel 架構  app/Console/Kernel.php 是放置 php artisan commands 以及排程設定的地方   在這邊設定排程後，在 laravel 專案用 php artisan schedule:list 可以檢查開啟的排程下一個執行時間是什麼時候，當執行時間與系統排程檢查對上時，就會執行 laravel 裡面設定的排程。
 系統的排程執行設定必須寫成這樣：  * * * * * php /path/to/artisan schedule:run &amp;gt;&amp;gt; /dev/null 2&amp;gt;&amp;amp;1 讓系統排程每分鐘都去執行 laravel 的 schedule:run ，看看有沒有預定執行時間已經到的 laravel 排程需要跑。 參考資源: 任務排程      如果專案環境是用 docker 起最精簡的 container 設定排程後，在 container 要記得安裝 crontab ，不然不會有系統排程的功能
   ide-helper 檔案是 ide-helper 套件自動產生的，作用是 mapping namespace 和 class ，以便在 auto load 時找到正確的 class，開發時也能夠藉由 reference 功能跳轉到對應程式檔案。  關於 ide-helper : barryvdh/laravel-ide-helper   由於 auto load 會去讀取 class 的 construct() ，所以 construct() 裡面不要放「起新物件」、「資料庫連線」之類跟環境設定和 .</description>
    </item>
    
    <item>
      <title>20210817</title>
      <link>https://bijenchen.github.io/work-journal/20210817/</link>
      <pubDate>Tue, 17 Aug 2021 17:48:14 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210817/</guid>
      <description>事件紀錄 久違的重溫了資料庫的 view 概念，順手紀錄一下。
碰到別的部門需要取用我們負責維護的資料表時，可以由我們準備好 SQL ，自己撈出一個虛擬表，將對方需要的欄位資料回傳給他。此時對方直接 select * from view 就好了。 不過更恰當的做法應該是在不同系統之間都用 API 溝通，我提供 API 讓對方呼叫，藉此取得所需的資料。畢竟如果這個系統可能會對外使用的話，沒道理要外人來連我的 database 取資料。
postgresql 有多一個功能 可以快取 view 變成真的虛擬表 詳見
總結 1. 工作技能有沒有因此成長了？ 已知概念，順手筆記
2. 計畫如何改善現況或者可以試著做得更好？ X
3. 如何在這件事上提升效率？ X
4. 有沒有把時間花在刀口上？ 有！
關鍵字  view  </description>
    </item>
    
    <item>
      <title>20210812</title>
      <link>https://bijenchen.github.io/work-journal/20210812/</link>
      <pubDate>Thu, 12 Aug 2021 17:48:14 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210812/</guid>
      <description>事件紀錄 因為公司正在批次維修設備，所以換了一台工作筆電。
原本打算使用 mac 內建的系統移轉輔助程式就好，殊不知放了一晚還沒傳完，一怒之下把該裝的東西直接重裝，順便回憶一下一些基本設定。
項目
 /etc/hosts  開發人員的測試環境是在公司的公用伺服器上，必須可以用瀏覽器檢視測試機內容，所以要設定。   ssh  檢查測試環境和調整設定會用到，總要先連線到遠端主機才能開始做事吧～ gen ssh key 的時候雖然用密碼對 key 加密比較安全，可是無論是 source tree 或是 sftp 都還要另外處理輸入加密密碼的狀況，而且設定 ssh 就是為了不想打密碼，結果還是得輸入加密用的密碼，根本多餘！  設定不好的話 source tree 會反覆跟你要加密密碼，在開 submodule 時也會 permission denied (sftp 也會遇到一樣問題)，奉勸真的不要找事。     VPN  居家辦公時需要用到，測試機只能用公司內網連線   vscode 有 sync 使用者設定的功能，所以只要重新裝再登入後同步就好  sftp 記得舊的電腦上的設定要拔掉，不然不小心存到檔案就會兩台電腦蓋來蓋去   source tree 帳號設定用 HTTP 就行了，可是還是要把 ssh key 存到帳號設定裡，才不用老是在輸入密碼  git clone 時直接在目的資料夾用 ssh 的方式取得專案最方便，記得把 ssh 需要的 host &amp;amp; user 存入 .</description>
    </item>
    
    <item>
      <title>20210722</title>
      <link>https://bijenchen.github.io/work-journal/20210722/</link>
      <pubDate>Thu, 22 Jul 2021 17:06:54 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210722/</guid>
      <description>事件紀錄 (一)
SQL 下 DISTINCT 效率很差(資料待補)，盡可能避免！
因為 DISTINCT 的行為是會逐筆看資料，將之分類成有取過與沒取過，
分類後得到的結果並不會包含原資料表的索引，就無法利用到索引帶來的效率。
相同的狀況也會出現在使用 subquery 的情境，哎租椅！
(二)
關於 phpunit
  function 紀錄
a. 檢查 array 格式的資料是否有指定的 key
assertArrayHasKey()
b. 檢查 項目內容是否相等
assertEquals()
其他可用 function 詳見套件說明
別人的使用經驗：Laravel – Unit Test 單元測試教學
  執行方式
a. 跑 class 裡全部的 method
[path of phpunit] [path of test file]
./vendor/bin/phpunit ./tests/Api/v1/yourTest.php
b. 跑 class 裡指定的 method
[path of phpunit] --filter [method name] [path of test file]</description>
    </item>
    
    <item>
      <title>20210714</title>
      <link>https://bijenchen.github.io/work-journal/20210714/</link>
      <pubDate>Wed, 14 Jul 2021 10:32:38 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210714/</guid>
      <description>事件紀錄 關於專案的導轉邏輯 找對應的 port 與登入資訊 流程
 local 瀏覽器輸入 testing 網址 testing 網址打 request 從 80 port 進到測試機 遇到 nginx/dev_proxy/docker-compose.yml 依照 nginx/dev_proxy/docker-compose.yml 導向 conf.d 裡的設定檔 nginx/dev_proxy/conf.d/testing-ttc-backend.company_name.co.conf 在這個 backend/testing/docker-compose.yml 檔案裡找到 container ttc_testing_nginx ，在 volumes 確定掛載資料夾是 /ttc/web/home/testing/ database 連線的資訊與 port 存在 /ttc/web/home/testing/www/ttc-backend/.env 裡面  從 DBeaver 設定連線進入遠掂資料庫 連到測試機 連到 AWC RDS 總結 1. 工作技能有沒有因此成長了？ write something here ~
2. 計畫如何改善現況或者可以試著做得更好？ write something here ~
3. 如何在這件事上提升效率？ write something here ~
4. 有沒有把時間花在刀口上？ write something here ~</description>
    </item>
    
    <item>
      <title>20210701</title>
      <link>https://bijenchen.github.io/work-journal/20210701/</link>
      <pubDate>Thu, 01 Jul 2021 09:45:06 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210701/</guid>
      <description>事件紀錄 (一)
關於命名的注意事項
 相同概念不同類型的東西，命名時把差異字放在中間，要搜尋時比較容易精準  舉例：
【後綴式命名】
PRODUCT_TYPE_CODE_FRUIT PRODUCT_TYPE_CODE_TOY PRODUCT_TYPE_CODE_BOOK 搜尋時如果想找 PRODUCT_TYPE_CODE 系列的片段，會把所有產品種類的片段都標起來。
如果想要找特定某一類產品，則需要搜尋到產品種類的第一碼例如「PRODUCT_TYPE_CODE_T」
【穿插式命名】
PRODUCT_TYPE_FRUIT_CODE PRODUCT_TYPE_TOY_CODE PRODUCT_TYPE_BOOK_CODE 搜尋時以「PRODUCT_TYPE_T」搜尋即可。
筆記 兩種感覺差別不大，使用習慣的問題？
function 命名時以動作為開頭，以成果為結尾，中間放能讓行為更具體的敘述：  e.g.
 getEmployeeCollection()
 取員工資料集，回傳 Collection 物件。 setChartTitle() 設定圖表標題，不見得會回傳材料，可能只回傳「是否設定成功」而已。 mapEmployeeDepartmentArray() 建立員工與部門的對照表，回傳 Array
  用來判斷的參數寫清楚是判斷什麼的   $is_already_login $is_paid
 有關聯的 function name 或變數之間要用一致的邏輯   getProductCollection() getExpiredProductCollection() getExpiredProductCollection() 會呼叫 getProductCollection() ，只是在呼叫時限縮範圍為已過期產品。
 總結 1. 工作技能有沒有因此成長了？ 好的命名能讓人真的用「閱讀意義」的方式去了解程式碼，對於維護會有很大的助益。
2. 計畫如何改善現況或者可以試著做得更好？ 也許未來在開發專案時可以一邊收集紀錄專案內的命名邏輯範例，避免一時腦袋不清楚亂命名。
3. 如何在這件事上提升效率？ 確立並內化一套命名規則。好處是可以減少命名上的遲疑時間，也能減少追溯變數源頭內容的時間。
4. 有沒有把時間花在刀口上？ 命名邏輯的確立是有價值的投資。</description>
    </item>
    
    <item>
      <title>20210629</title>
      <link>https://bijenchen.github.io/work-journal/20210629/</link>
      <pubDate>Wed, 30 Jun 2021 00:05:33 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210629/</guid>
      <description>事件紀錄 (一)
雖然實際上是上週的事，但我至今還是很不服氣，於是補記。
上週為了讓非開發人員的同仁也能在公司內部的測試機上面測試功能，於是協助設定 VPN 連線與 hosts 檔。
合理想見，一定會遇到 windows 系統。所以我在開始幫同事們設定之前，先拿自己的筆電設定，以免遇到麻煩事耽誤對方時間。
殊不知，最麻煩的就是我自己的筆電！！！！
要在 windows 系統裡更新 hosts 檔，最直覺的方式是對著 hosts 檔按右鍵，選擇「以系統管理員身份開啟」，接著就萬事大吉了。
按了右鍵如果找不到跟「系統管理員」相關的選項，也可以先用系統管理員身份開啟記事本，再開啟舊檔，選擇 hosts 檔案開啟。
但討厭的是，微軟不知更新到哪一版後，似乎會鎖 Administrator 權限，就算編輯了 hosts 檔案也無法存進 /etc 資料夾，強制要人另存新檔。就算此時使用者顯示身份是系統管理員，也不是真的最高權限。
遇到這種情況時，需要去把真正的 Administrator 權限打開：
方法1. 在 電腦管理 &amp;gt; 本機使用者和群組 &amp;gt; 使用者 解除限制
 參考：https://www.fox-saying.com/blog/post/46022103
 方法2. 用進階啟動重啟電腦
 在微軟的「設定」裡以關鍵字「啟動」搜尋，可以找到「變更進階啟動選項」，選擇進階啟動裡的「立即重新啟動」按鈕，即可以安全模式進入Windows作業系統。(但是重啟的過程中只能靠通話&amp;amp;通靈進行遠端協助，希望盡可能不要走到這一步😢) 參考：https://kknews.cc/tech/pxav6le.html 走投無路被內容農場救一次，但可以選的話我還是不想看內容農場 XDD
 雖然折騰了一陣之後，我終於順利的修改了自己電腦的 hosts 檔案。但過不久發現了令人難過的真相，搞半天只有我的電腦這麼難纏，其他人都可以用系統管理員開記事本存檔&amp;hellip;&amp;hellip;
可惡啊啊啊啊啊啊啊啊！！！我想著自己先嘗試難道是錯的嗎？不這麼謹慎反而不會遇到這麼讓人火大的問題，嘖！
還是說這是天將降大任於吾身，所以簡單的「設定 hosts 檔」也要我去見識各種花招？
別啊嗚嗚嗚嗚嗚嗚，我討厭微軟！
沒想到用自己的 windows 電腦嘗試設定 hosts ，居然要千方百計才能拿到 Administrator 權限&amp;hellip;&amp;hellip;
氣啊！！！！！
 血淚史 微軟官方文件一點幫助都沒有&amp;hellip;&amp;hellip; https://support.</description>
    </item>
    
    <item>
      <title>20210618</title>
      <link>https://bijenchen.github.io/work-journal/20210618/</link>
      <pubDate>Fri, 18 Jun 2021 16:28:08 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210618/</guid>
      <description>事件紀錄 (一)
看到同事用 -&amp;gt;addBinding($LaravelEloquentObject-&amp;gt;getBindings()) 取代原本的寫法 -&amp;gt;mergeBindings($LaravelEloquentObject-&amp;gt;getQuery())
想知道差異在哪裡？待查。
(二)
疑問：
在不需要關聯別的表、也沒有 subquery 出其他別名的情況下，還需要特地指定是拿哪個表的欄位嗎?
原始SQL概念
SELECT employee.id FROM employee Laravel Eloquent ORM 寫法
## parent: /** * 建立資料 * @param array $entity_data * @return |null */ public function createEntity(array $entity_data) { $Entity = null; if ($this-&amp;gt;Entity instanceof Model) { $Entity = $this-&amp;gt;Entity-&amp;gt;create($entity_data); } return $Entity; } ## main public function __construct() { $this-&amp;gt;Employee = app()-&amp;gt;make(Employee::class); $this-&amp;gt;employee_table_name = $this-&amp;gt;Employee-&amp;gt;getTable(); parent::__construct(); } public function getCompanyEmployeeCount() { // 資料表名稱  $employee_table_name = $this-&amp;gt;employee_table_name; // 自訂欄位  $custom_select_field = [ &amp;#34;{$employee_table_name}.</description>
    </item>
    
    <item>
      <title>報恩報仇不二做，工作反省不貳過！</title>
      <link>https://bijenchen.github.io/work-journal/20210617/</link>
      <pubDate>Fri, 18 Jun 2021 13:03:23 +0800</pubDate>
      
      <guid>https://bijenchen.github.io/work-journal/20210617/</guid>
      <description>事件紀錄 這週犯了數個低級錯誤，必須反省！
(一)
都寫程式多久了！複製貼上相似功能的 code ， namespace 怎麼可以不檢查？在那邊亂寫！
程式不只要正確執行，產生對的結果，還要好維護！ namespace 不寫好、 class 開頭不宣告引用物件，日後追程式是要追到何時？用全域搜尋硬幹嗎？！反省！
(二)
能元件化的程式片段，要記得拆出來，未來的你會感謝自己。
(三)
遵照 gitflow 從 dev 開分支，功能完成記得取最新的 dev 併進來測試， sourcetree 的 fetch 多按幾次，不要被陰了！併完要順便檢查 submodule 版本有沒有都吃對，通過測試才能發 PR 合回去 dev ，基本原則要做到變成膝反射，知不知道！
(四)
已知用 hugo Archetypes document hugo new [archetypes_name]/[article_name].md
總結 1. 工作技能有沒有因此成長了？ 差點沒有，已知的知識怎麼可以犯錯！
還好還長了 hugo Archetypes 知識，略為欣慰。
2. 計畫如何改善現況或者可以試著做得更好？ 1. 貼 code 過來把 namespace &amp;amp; use 刪乾淨，用套件重新引入。 2. sourcetree 的 fetch 給我多按幾次！  3. 如何在這件事上提升效率？ 把基本功訓練成膝跳反射！
4. 有沒有把時間花在刀口上？ 沒有！重複犯錯是浪費時間！ hugo 技能只對做筆記有幫助。</description>
    </item>
    
  </channel>
</rss>
